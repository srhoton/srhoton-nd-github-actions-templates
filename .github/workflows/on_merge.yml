name: Global On Merge Workflow
on: 
  workflow_call:
    inputs:
      repository:
        description: 'The repository that is being deployed'
        required: true
        type: string
jobs:
  Run_Terraform-Dev:
    runs-on:
      - codebuild-github_project-${{ github.run_id }}-${{ github.run_attempt }}
      - image:arm-3.0
      - instance-size:small
    environment: dev
    steps:
      - uses: hashicorp/setup-terraform@v3
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4.0.2
        with: 
          role-to-assume: arn:aws:iam::874500785305:role/codebuild-service-role
          role-session-name: AssumeRoleSession
          aws-region: us-east-1
      - uses: aws-actions/amazon-ecr-login@v2
        with:
          registries: "705740530616"
      - name: STS Get Caller Identity
        run: aws sts get-caller-identity
      - name: Build, tag, and push docker image to Amazon ECR Public
        env:
          REGISTRY: 705740530616.dkr.ecr.us-east-1.amazonaws.com
          REGISTRY_ALIAS: nd-github-actions-app
          REPOSITORY: ${{ inputs.repository }}
          IMAGE_TAG: latest
        run: |
          docker build -t $REPOSITORY:$IMAGE_TAG .
          docker tag $REPOSITORY:$IMAGE_TAG $REGISTRY/$REPOSITORY:dev
          docker push $REGISTRY/$REPOSITORY:latest
      - name: Terraform Init
        run: terraform -chdir=./terraform init --backend-config=config/dev.config 
      - name: Terraform Workspace Select
        run: terraform -chdir=./terraform workspace select ${{ inputs.repository }}-dev || terraform -chdir=./terraform workspace new ${{ inputs.repository }}-dev
      - name: Terraform Plan
        run: terraform -chdir=./terraform plan -var environment=dev -var repository=${{ inputs.repository }} -var tag=latest
      - name: Terraform Apply
        run: terraform -chdir=./terraform apply -var environment=dev -var repository=${{ inputs.repository }} -var tag=latest -auto-approve
  Run_Terraform-Test:
    needs: Run_Terraform-Dev
    runs-on:
      - codebuild-github_project-${{ github.run_id }}-${{ github.run_attempt }}
      - image:arm-3.0
      - instance-size:small
    environment: test
    steps:
      - uses: hashicorp/setup-terraform@v3
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4.0.2
        with: 
          role-to-assume: arn:aws:iam::541179526067:role/codebuild-service-role
          role-session-name: AssumeRoleSession
          aws-region: us-east-1
      - name: STS Get Caller Identity
        run: aws sts get-caller-identity
      - name: Terraform Init
        run: terraform -chdir=./terraform init --backend-config=config/test.config 
      - name: Terraform Workspace Select
        run: terraform -chdir=./terraform workspace select ${{ inputs.repository }}-test || terraform -chdir=./terraform workspace new ${{ inputs.repository }}-test
      - name: Terraform Plan
        run: terraform -chdir=./terraform plan -var environment=test -var repository=${{ inputs.repository }} -var tag=latest
      - name: Terraform Apply
        run: terraform -chdir=./terraform apply -var environment=test -var repository=${{ inputs.repository }} -var tag=latest -auto-approve
