name: Global On Tag Workflow
on: 
  workflow_call:
    inputs:
      repository:
        description: 'The repository that is being deployed'
        required: true
        type: string
jobs:
  Run_Terraform-Stage:
    runs-on:
      - codebuild-github_project-${{ github.run_id }}-${{ github.run_attempt }}
      - image:arm-3.0
      - instance-size:small
    environment: stage
    steps:
      - uses: hashicorp/setup-terraform@v3
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4.0.2
        with: 
          role-to-assume: arn:aws:iam::198951851865:role/codebuild-service-role
          role-session-name: AssumeRoleSession
          aws-region: us-east-1
      - name: STS Get Caller Identity
        run: aws sts get-caller-identity
      - name: Terraform Init
        run: terraform -chdir=./terraform init --backend-config=config/stage.config 
      - name: Terraform Workspace Select
        run: terraform -chdir=./terraform workspace select ${{ inputs.repository }}-stage || terraform -chdir=./terraform workspace new ${{ inputs.repository }}-stage
      - name: Terraform Plan
        run: terraform -chdir=./terraform plan -var environment=stage -var repository=${{ inputs.repository }}
      - name: Terraform Apply
        run: terraform -chdir=./terraform apply -var environment=stage -var repository=${{ inputs.repository }} -auto-approve
  Run_Terraform-Prod:
    runs-on:
      - codebuild-github_project-${{ github.run_id }}-${{ github.run_attempt }}
      - image:arm-3.0
      - instance-size:small
    environment: prod
    steps:
      - uses: hashicorp/setup-terraform@v3
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4.0.2
        with: 
          role-to-assume: arn:aws:iam::143007488490:role/codebuild-service-role
          role-session-name: AssumeRoleSession
          aws-region: us-east-1
      - name: STS Get Caller Identity
        run: aws sts get-caller-identity
      - name: Terraform Init
        run: terraform -chdir=./terraform init --backend-config=config/prod.config 
      - name: Terraform Workspace Select
        run: terraform -chdir=./terraform workspace select ${{ inputs.repository }}-prod || terraform -chdir=./terraform workspace new ${{ inputs.repository }}-prod
      - name: Terraform Plan
        run: terraform -chdir=./terraform plan -var environment=prod -var repository=${{ inputs.repository }}
      - name: Terraform Apply
        run: terraform -chdir=./terraform apply -var environment=prod -var repository=${{ inputs.repository }} -auto-approve
